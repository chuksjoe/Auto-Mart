{
  "name": "automart",
  "version": "1.0.0",
  "description": "Auto Mart is an online marketplace for automobiles of diverse makes, model or body type.",
  "main": "index.js",
  "scripts": {
    "build": "babel -d ./build ./api -s",
    "prod-start": "set NODE_ENV=production& node dist/v1/index.js",
    "dev-start": "set NODE_ENV=development& babel-node api/v1/index.js",
    "dev": "set DEBUG=http & set NODE_ENV=development& nodemon api/v1/index.js --exec babel-node",
    "test": "set DEBUG=http & set NODE_ENV=test& npm run reset-db-tables & mocha --timeout 0 --require babel-core/register --reporter spec --exit tests/ --exec babel-node",
    "local-test": "set DEBUG=http & set NODE_ENV=local_test& npm run reset-db-tables & mocha --timeout 0 --require babel-core/register --reporter spec --exit tests/ --exec babel-node",
    "generate-lcov": "./node_modules/.bin/nyc report --reporter=text-lcov > lcov.info",
    "coveralls-coverage": "coveralls < lcov.info",
    "codeclimate-coverage": "codeclimate-test-reporter < lcov.info",
    "coverage": "./node_modules/.bin/nyc npm test && npm run generate-lcov && npm run coveralls-coverage && npm run codeclimate-coverage",
    "create-users-table": "node api/v1/db/db.js createUsersTable",
    "create-cars-table": "node api/v1/db/db.js createCarsTable",
    "create-orders-table": "node api/v1/db/db.js createOrdersTable",
    "create-flags-table": "node api/v1/db/db.js createFlagsTable",
    "create-db-tables": "set DEBUG=http & set NODE_ENV=development& npm run create-users-table & npm run create-cars-table & npm run create-orders-table  & npm run create-flags-table",
    "drop-users-table": "node api/v1/db/db.js dropUsersTable",
    "reset-db-tables": "node api/v1/db/db.js resetTables",
    "drop-cars-table": "node api/v1/db/db.js dropCarsTable",
    "drop-orders-table": "node api/v1/db/db.js dropOrdersTable",
    "drop-flags-table": "node api/v1/db/db.js dropFlagsTable",
    "drop-db-tables": "set DEBUG=http & set NODE_ENV=development& npm run drop-flags-table & npm run drop-orders-table & npm run drop-cars-table & npm run drop-users-table",
    "recreate-db": "npm run drop-db-tables & npm run create-db-tables",
    "create-test-db-tables": "set DEBUG=http & set NODE_ENV=test& npm run create-users-table & npm run create-cars-table & npm run create-orders-table  & npm run create-flags-table",
    "drop-test-db-tables": "set DEBUG=http & set NODE_ENV=test& npm run drop-flags-table & npm run drop-orders-table & npm run drop-cars-table & npm run drop-users-table",
    "recreate-test-db": "npm run drop-test-db-tables & npm run create-test-db-tables",
    "create-local-test-db-tables": "set DEBUG=http & set NODE_ENV=local_test& npm run create-users-table & npm run create-cars-table & npm run create-orders-table  & npm run create-flags-table",
    "drop-local-test-db-tables": "set DEBUG=http & set NODE_ENV=local_test& npm run drop-flags-table & npm run drop-orders-table & npm run drop-cars-table & npm run drop-users-table",
    "recreate-local-test-db": "npm run drop-local-test-db-tables & npm run create-local-test-db-tables",
    "create-prod-db-tables": "set DEBUG=http & set NODE_ENV=production& npm run create-users-table & npm run create-cars-table & npm run create-orders-table  & npm run create-flags-table",
    "drop-prod-db-tables": "set DEBUG=http & set NODE_ENV=production& npm run drop-flags-table & npm run drop-orders-table & npm run drop-cars-table & npm run drop-users-table",
    "recreate-prod-db": "npm run drop-prod-db-tables & npm run create-prod-db-tables"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/chuksjoe/Auto-Mart.git"
  },
  "keywords": [
    "automart",
    "auto",
    "mart",
    "cars",
    "sales",
    "purchase",
    "online",
    "marketplace",
    "automobiles"
  ],
  "author": "Chukwunonso Orjiakor",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/chuksjoe/Auto-Mart/issues"
  },
  "homepage": "https://github.com/chuksjoe/Auto-Mart#readme",
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-eslint": "^10.0.2",
    "babel-preset-env": "^1.7.0",
    "chai": "^4.2.0",
    "chai-http": "^4.3.0",
    "codeclimate-test-reporter": "^0.5.1",
    "eslint": "^5.16.0",
    "mocha": "^6.1.4",
    "mocha-lcov-reporter": "^1.3.0",
    "node-config": "0.0.2",
    "nodemon": "^1.19.0",
    "nyc": "^14.1.1"
  },
  "dependencies": {
    "async": "^3.0.1",
    "babel-polyfill": "^6.26.0",
    "bcrypt": "^3.0.6",
    "cloudinary": "^1.14.0",
    "compression": "^1.7.4",
    "connect-multiparty": "^2.2.0",
    "cors": "^2.8.5",
    "coveralls": "^3.0.3",
    "custom-env": "^1.0.2",
    "debug": "^4.1.1",
    "dotenv": "^8.0.0",
    "eslint-config-airbnb-base": "^13.1.0",
    "eslint-plugin-import": "^2.17.2",
    "express": "^4.17.0",
    "istanbul": "^0.4.5",
    "jsonwebtoken": "^8.5.1",
    "make-runnable": "^1.3.6",
    "moment": "^2.24.0",
    "morgan": "^1.9.1",
    "nodemailer": "^6.2.1",
    "path": "^0.12.7",
    "pg": "^7.11.0",
    "uuidv4": "^4.0.0"
  },
  "babel": {
    "presets": [
      [
        "env",
        {
          "targets": {
            "node": "current"
          }
        }
      ]
    ]
  },
  "env": {
    "node": true,
    "es6": true
  },
  "parserOption": {
    "sourceType": "module",
    "ecmaVersion": 2018
  },
  "engines": {
    "node": ">=8"
  }
}
